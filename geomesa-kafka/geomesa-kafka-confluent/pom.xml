<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.locationtech.geomesa</groupId>
        <artifactId>geomesa-kafka_2.12</artifactId>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        <version>3.4.0-SNAPSHOT</version>
=======
=======
>>>>>>> fb47f5073 ([maven-release-plugin] prepare for next development iteration)
<<<<<<< HEAD
=======
>>>>>>> 059393960 (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
>>>>>>> 61d746ac2 ([maven-release-plugin] prepare for next development iteration)
=======
=======
>>>>>>> 6ed35b9ff (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
>>>>>>> b6c4628db (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
=======
>>>>>>> 6ed35b9ff (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
>>>>>>> fb47f5073 ([maven-release-plugin] prepare for next development iteration)
>>>>>>> dbcf5b0db ([maven-release-plugin] prepare for next development iteration)
=======
>>>>>>> 1a54249ab (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
>>>>>>> 0c5ed829b ([maven-release-plugin] prepare for next development iteration)
=======
=======
>>>>>>> 6ed35b9ff (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
>>>>>>> 8f88e57ed (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
        <version>3.5.0-SNAPSHOT</version>
=======
        <version>3.3.0-SNAPSHOT</version>
>>>>>>> 1108247cc (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 6ed35b9ff (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
=======
        <version>3.4.0-SNAPSHOT</version>
>>>>>>> 5792d822c ([maven-release-plugin] prepare for next development iteration)
>>>>>>> fb47f5073 ([maven-release-plugin] prepare for next development iteration)
=======
>>>>>>> 059393960 (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
=======
        <version>3.4.0-SNAPSHOT</version>
>>>>>>> 5792d822c ([maven-release-plugin] prepare for next development iteration)
>>>>>>> 61d746ac2 ([maven-release-plugin] prepare for next development iteration)
=======
=======
>>>>>>> dbcf5b0db ([maven-release-plugin] prepare for next development iteration)
=======
        <version>3.4.0-SNAPSHOT</version>
>>>>>>> 5792d822c ([maven-release-plugin] prepare for next development iteration)
=======
>>>>>>> 6ed35b9ff (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
<<<<<<< HEAD
>>>>>>> b6c4628db (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
=======
=======
        <version>3.4.0-SNAPSHOT</version>
>>>>>>> 5792d822c ([maven-release-plugin] prepare for next development iteration)
>>>>>>> fb47f5073 ([maven-release-plugin] prepare for next development iteration)
>>>>>>> dbcf5b0db ([maven-release-plugin] prepare for next development iteration)
=======
>>>>>>> 1a54249ab (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
=======
=======
        <version>3.4.0-SNAPSHOT</version>
>>>>>>> 5792d822c ([maven-release-plugin] prepare for next development iteration)
>>>>>>> 0c5ed829b ([maven-release-plugin] prepare for next development iteration)
=======
=======
        <version>3.4.0-SNAPSHOT</version>
>>>>>>> 5792d822c ([maven-release-plugin] prepare for next development iteration)
=======
>>>>>>> 6ed35b9ff (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
>>>>>>> 8f88e57ed (GEOMESA-3076 Do inexact checking for cardinality values in minmax stat)
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>geomesa-kafka-confluent_2.12</artifactId>
    <name>GeoMesa Kafka Confluent Datastore</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <avro.version>${confluent.avro.version}</avro.version>
        <kafka.scala.version>${scala.binary.version}</kafka.scala.version> <!-- try to override the confluent pom -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.locationtech.geomesa</groupId>
            <artifactId>geomesa-kafka-datastore_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-main</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- provided -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-client</artifactId>
            <version>${confluent.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${confluent.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.xerial.snappy</groupId>
                    <artifactId>snappy-java</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.specs2</groupId>
            <artifactId>specs2-core_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.specs2</groupId>
            <artifactId>specs2-junit_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.specs2</groupId>
            <artifactId>specs2-mock_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <classifier>test</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <classifier>test</classifier>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry</artifactId>
            <version>${confluent.version}</version>
            <scope>test</scope>
            <exclusions>
                <!-- exclude scala jars so that we can bring in 2.12 or 2.11 as appropriate -->
                <exclusion>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.kjetland</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry</artifactId>
            <version>${confluent.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
            <exclusions>
                <!-- exclude scala jars so that we can bring in 2.12 or 2.11 as appropriate -->
                <exclusion>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.kjetland</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- from kafka-schema-registry, above -->
            <groupId>com.kjetland</groupId>
            <artifactId>mbknor-jackson-jsonschema_${scala.binary.version}</artifactId>
            <version>1.0.39</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.locationtech.geomesa</groupId>
            <artifactId>geomesa-kafka-datastore_${scala.binary.version}</artifactId>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
    </dependencies>

</project>
